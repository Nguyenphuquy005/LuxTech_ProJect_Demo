{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst photoList = [{\n  id: 1,\n  name: 'Viet dep trai',\n  adress: 'Tamky'\n}];\nconst photo = createSlice({\n  name: 'photos',\n  initialState: photoList,\n  reducers: {\n    addPhoto: (state, action) => {\n      state.push(action.payload);\n    },\n    removePhoto: (state, action) => {\n      console.log(action.payload, 'payload');\n      const removePhotoId = action.payload;\n      state = state.filter(photo => photo.id !== removePhotoId);\n      return state;\n    },\n    updatePhoto: (state, action) => {\n      const newphoto = action.payload;\n      console.log(action.payload, 'payload');\n      const photoIndex = state.filter(photo => photo.id === newphoto.id);\n\n      if (photoIndex >= 0) {\n        console.log('1');\n        state[photoIndex.id] = newphoto;\n      }\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = photo;\nexport const {\n  addPhoto,\n  removePhoto,\n  updatePhoto\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["D:/Luxtech/Code/LuxProject/DemoReactJS/ReduxDemo/crudreactredux/src/components/phooApp/PhotoSlice.js"],"names":["createSlice","photoList","id","name","adress","photo","initialState","reducers","addPhoto","state","action","push","payload","removePhoto","console","log","removePhotoId","filter","updatePhoto","newphoto","photoIndex","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAG,CACd;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,eAFV;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CADc,CAAlB;AAOA,MAAMC,KAAK,GAAGL,WAAW,CAAC;AACtBG,EAAAA,IAAI,EAAE,QADgB;AAEtBG,EAAAA,YAAY,EAAEL,SAFQ;AAGtBM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AAEH,KAJK;AAMNC,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC5BI,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB,EAA4B,SAA5B;AACA,YAAMI,aAAa,GAAGN,MAAM,CAACE,OAA7B;AACAH,MAAAA,KAAK,GAAGA,KAAK,CAACQ,MAAN,CAAaZ,KAAK,IAAIA,KAAK,CAACH,EAAN,KAAac,aAAnC,CAAR;AACA,aAAOP,KAAP;AACH,KAXK;AAYNS,IAAAA,WAAW,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC5B,YAAMS,QAAQ,GAAGT,MAAM,CAACE,OAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB,EAA4B,SAA5B;AACA,YAAMQ,UAAU,GAAGX,KAAK,CAACQ,MAAN,CAAaZ,KAAK,IAAIA,KAAK,CAACH,EAAN,KAAaiB,QAAQ,CAACjB,EAA5C,CAAnB;;AAEA,UAAIkB,UAAU,IAAI,CAAlB,EAAqB;AACjBN,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAN,QAAAA,KAAK,CAACW,UAAU,CAAClB,EAAZ,CAAL,GAAuBiB,QAAvB;AACH;AAEJ;AAtBK;AAHY,CAAD,CAAzB;AA6BA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBjB,KAA7B;AACA,OAAO,MAAM;AAAEG,EAAAA,QAAF;AAAYK,EAAAA,WAAZ;AAAyBK,EAAAA;AAAzB,IAAyCI,OAA/C;AACP,eAAeD,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst photoList = [\r\n    {\r\n        id: 1,\r\n        name: 'Viet dep trai',\r\n        adress: 'Tamky'\r\n    }\r\n]\r\nconst photo = createSlice({\r\n    name: 'photos',\r\n    initialState: photoList,\r\n    reducers: {\r\n        addPhoto: (state, action) => {\r\n            state.push(action.payload)\r\n\r\n        }\r\n        ,\r\n        removePhoto: (state, action) => {\r\n            console.log(action.payload, 'payload');\r\n            const removePhotoId = action.payload\r\n            state = state.filter(photo => photo.id !== removePhotoId)\r\n            return state\r\n        },\r\n        updatePhoto: (state, action) => {\r\n            const newphoto = action.payload\r\n            console.log(action.payload, 'payload');\r\n            const photoIndex = state.filter(photo => photo.id === newphoto.id)\r\n\r\n            if (photoIndex >= 0) {\r\n                console.log('1');\r\n                state[photoIndex.id] = newphoto\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\n\r\nconst { reducer, actions } = photo\r\nexport const { addPhoto, removePhoto, updatePhoto } = actions\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}