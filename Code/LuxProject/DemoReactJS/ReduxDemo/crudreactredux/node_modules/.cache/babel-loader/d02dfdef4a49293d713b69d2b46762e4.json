{"ast":null,"code":"var _jsxFileName = \"D:\\\\Luxtech\\\\Code\\\\LuxProject\\\\DemoReactJS\\\\ReduxDemo\\\\crudreactredux\\\\src\\\\components\\\\employee\\\\EmployeeKit.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../Redux/employeeRedux/EmployeeReduxKit';\nconst mapDispatch = {\n  addTodo\n};\n\nconst AddTodo = ({\n  addTodo\n}) => {\n  const [todoText, setTodoText] = useState('');\n\n  const onChange = e => setTodoText(e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"123\"));\n};\n\nexport default connect(null, mapDispatch)(AddTodo);","map":{"version":3,"sources":["D:/Luxtech/Code/LuxProject/DemoReactJS/ReduxDemo/crudreactredux/src/components/employee/EmployeeKit.js"],"names":["React","useState","connect","addTodo","mapDispatch","AddTodo","todoText","setTodoText","onChange","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,4CAAxB;AAEA,MAAMC,WAAW,GAAG;AAAED,EAAAA;AAAF,CAApB;;AAEA,MAAME,OAAO,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAiB;AAC7B,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMO,QAAQ,GAAGC,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ;AAkBH,CAvBD;;AAyBA,eAAeT,OAAO,CAAC,IAAD,EAAOE,WAAP,CAAP,CAA2BC,OAA3B,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../../Redux/employeeRedux/EmployeeReduxKit'\r\n\r\nconst mapDispatch = { addTodo }\r\n\r\nconst AddTodo = ({ addTodo }) => {\r\n    const [todoText, setTodoText] = useState('')\r\n\r\n    const onChange = e => setTodoText(e.target.value)\r\n\r\n    return (\r\n        <div>\r\n            <h1>123</h1>\r\n            {/* <form\r\n                onSubmit={e => {\r\n                    e.preventDefault()\r\n                    if (!todoText.trim()) {\r\n                        return\r\n                    }\r\n                    addTodo(todoText)\r\n                    setTodoText('')\r\n                }}\r\n            >\r\n                <input value={todoText} onChange={onChange} />\r\n                <button type=\"submit\">Add Todo</button>\r\n            </form> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatch)(AddTodo)"]},"metadata":{},"sourceType":"module"}