{"ast":null,"code":"var _jsxFileName = \"D:\\\\Luxtech\\\\Code\\\\LuxProject\\\\DemoReactJS\\\\ReduxDemo\\\\crudreactredux\\\\src\\\\components\\\\photoApp\\\\photoForm\\\\PhotoForm.js\";\nimport React from 'react';\nimport { Formik, Field, FastField, Form } from 'formik';\nimport * as Yup from 'yup';\n\nconst PhotoForm = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }\n}, \"Sign Up\"), /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    firstName: '',\n    lastName: '',\n    email: ''\n  },\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(),\n    middleInitial: Yup.string(),\n    lastName: Yup.string().required(),\n    email: Yup.string().email().required()\n  }),\n  onSubmit: values => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n    }, 500);\n  },\n  render: formikProps => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(FastField, {\n    name: \"firstName\",\n    placeholder: \"Weezy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), form.touched.firstName && form.errors.firstName && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, form.errors.firstName), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"middleInitial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Middle Initial\"), /*#__PURE__*/React.createElement(FastField, {\n    name: \"middleInitial\",\n    placeholder: \"F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, ({\n    field,\n    form,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  })), meta.touched ? meta.error : null, form.touched.firstName && form.errors.firstName ? form.errors.firstName : null, form.submitCount, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: form.setFieldValue('middleInitial', 'J'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, \"J\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"LastName\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"lastName\",\n    placeholder: \"Baby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  })), form.touched.firstName && form.errors.firstName ? form.errors.firstName : null)), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    placeholder: \"jane@acme.com\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Submit\")),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}));\n\nexport default PhotoForm;","map":{"version":3,"sources":["D:/Luxtech/Code/LuxProject/DemoReactJS/ReduxDemo/crudreactredux/src/components/photoApp/photoForm/PhotoForm.js"],"names":["React","Formik","Field","FastField","Form","Yup","PhotoForm","firstName","lastName","email","object","shape","string","required","middleInitial","values","setTimeout","alert","JSON","stringify","formikProps","form","touched","errors","field","meta","error","submitCount","setFieldValue"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik, Field, FastField, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nconst PhotoForm = () => (\r\n    <div>\r\n        <h1>Sign Up</h1>\r\n        <Formik\r\n            initialValues={{\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                firstName: Yup.string().required(),\r\n                middleInitial: Yup.string(),\r\n                lastName: Yup.string().required(),\r\n                email: Yup.string().email().required(),\r\n            })}\r\n            onSubmit={values => {\r\n                setTimeout(() => {\r\n                    alert(JSON.stringify(values, null, 2));\r\n                }, 500);\r\n            }}\r\n            render={formikProps => (\r\n                <Form>\r\n                    {/** This <FastField> only updates for changes made to\r\n             values.firstName, touched.firstName, errors.firstName */}\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <FastField name=\"firstName\" placeholder=\"Weezy\" />\r\n\r\n                    {/** Updates for all changes because it's from the\r\n             top-level formikProps which get all updates */}\r\n                    {form.touched.firstName && form.errors.firstName && (\r\n                        <div>{form.errors.firstName}</div>\r\n                    )}\r\n\r\n                    <label htmlFor=\"middleInitial\">Middle Initial</label>\r\n                    <FastField name=\"middleInitial\" placeholder=\"F\">\r\n                        {({ field, form, meta }) => (\r\n                            <div>\r\n                                <input {...field} />\r\n                                {/**\r\n                   * This updates normally because it's from the same slice of Formik state,\r\n                   * i.e. path to the object matches the name of this <FastField />\r\n                   */}\r\n                                {meta.touched ? meta.error : null}\r\n\r\n                                {/** This won't ever update since it's coming from\r\n                   from another <Field>/<FastField>'s (i.e. firstName's) slice   */}\r\n                                {form.touched.firstName && form.errors.firstName\r\n                                    ? form.errors.firstName\r\n                                    : null}\r\n\r\n                                {/* This doesn't update either */}\r\n                                {form.submitCount}\r\n\r\n                                {/* Imperative methods still work as expected */}\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={form.setFieldValue('middleInitial', 'J')}\r\n                                >\r\n                                    J\r\n                  </button>\r\n                            </div>\r\n                        )}\r\n                    </FastField>\r\n\r\n                    {/** Updates for all changes to Formik state\r\n             and all changes by all <Field>s and <FastField>s */}\r\n                    <label htmlFor=\"lastName\">LastName</label>\r\n                    <Field name=\"lastName\" placeholder=\"Baby\">\r\n                        {() => (\r\n                            <div>\r\n                                <input {...field} />\r\n                                {/**  Works because this is inside\r\n                   of a <Field/>, which gets all updates */}\r\n                                {form.touched.firstName && form.errors.firstName\r\n                                    ? form.errors.firstName\r\n                                    : null}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n\r\n                    {/** Updates for all changes to Formik state and\r\n             all changes by all <Field>s and <FastField>s */}\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Field name=\"email\" placeholder=\"jane@acme.com\" type=\"email\" />\r\n\r\n                    <button type=\"submit\">Submit</button>\r\n                </Form>\r\n            )}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default PhotoForm;"]},"metadata":{},"sourceType":"module"}