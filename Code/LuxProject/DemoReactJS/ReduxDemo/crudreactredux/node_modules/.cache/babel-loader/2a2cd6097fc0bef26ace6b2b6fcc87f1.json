{"ast":null,"code":"import { connect } from 'react-redux';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { toggleTodo } from '../../Redux/todo/SliceTodo';\nimport TodoList from './TodoList';\nimport { VisibilityFilters } from '../../Redux/todo/fifltersSlice';\n\nconst selectTodos = state => state.todos;\n\nconst selectFilter = state => state.visibilityFilter;\n\nconst selectVisibleTodos = createSelector([selectTodos, selectFilter], (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n});\n\nconst mapStateToProps = state => ({\n  todos: selectVisibleTodos(state)\n});\n\nconst mapDispatchToProps = {\n  toggleTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["D:/Luxtech/Code/LuxProject/DemoReactJS/ReduxDemo/crudreactredux/src/components/todo/VisibleTodoList.js"],"names":["connect","createSelector","toggleTodo","TodoList","VisibilityFilters","selectTodos","state","todos","selectFilter","visibilityFilter","selectVisibleTodos","filter","SHOW_ALL","SHOW_COMPLETED","t","completed","SHOW_ACTIVE","Error","mapStateToProps","mapDispatchToProps"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAWA,KAAK,CAACC,KAArC;;AACA,MAAMC,YAAY,GAAIF,KAAD,IAAWA,KAAK,CAACG,gBAAtC;;AACA,MAAMC,kBAAkB,GAAGT,cAAc,CACvC,CAACI,WAAD,EAAcG,YAAd,CADuC,EAEvC,CAACD,KAAD,EAAQI,MAAR,KAAmB;AACjB,UAAQA,MAAR;AACE,SAAKP,iBAAiB,CAACQ,QAAvB;AACE,aAAOL,KAAP;;AACF,SAAKH,iBAAiB,CAACS,cAAvB;AACE,aAAON,KAAK,CAACI,MAAN,CAAaG,CAAC,IAAIA,CAAC,CAACC,SAApB,CAAP;;AACF,SAAKX,iBAAiB,CAACY,WAAvB;AACE,aAAOT,KAAK,CAACI,MAAN,CAAaG,CAAC,IAAI,CAACA,CAAC,CAACC,SAArB,CAAP;;AACF;AACE,YAAM,IAAIE,KAAJ,CAAU,qBAAqBN,MAA/B,CAAN;AARJ;AAUD,CAbsC,CAAzC;;AAgBA,MAAMO,eAAe,GAAGZ,KAAK,KAAK;AAChCC,EAAAA,KAAK,EAAEG,kBAAkB,CAACJ,KAAD;AADO,CAAL,CAA7B;;AAIA,MAAMa,kBAAkB,GAAG;AAAEjB,EAAAA;AAAF,CAA3B;AAEA,eAAeF,OAAO,CACpBkB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import { connect } from 'react-redux'\r\nimport { createSelector } from '@reduxjs/toolkit'\r\nimport { toggleTodo } from '../../Redux/todo/SliceTodo'\r\nimport TodoList from './TodoList'\r\nimport { VisibilityFilters } from '../../Redux/todo/fifltersSlice'\r\n\r\nconst selectTodos = (state) => state.todos\r\nconst selectFilter = (state) => state.visibilityFilter\r\nconst selectVisibleTodos = createSelector(\r\n  [selectTodos, selectFilter],\r\n  (todos, filter) => {\r\n    switch (filter) {\r\n      case VisibilityFilters.SHOW_ALL:\r\n        return todos\r\n      case VisibilityFilters.SHOW_COMPLETED:\r\n        return todos.filter(t => t.completed)\r\n      case VisibilityFilters.SHOW_ACTIVE:\r\n        return todos.filter(t => !t.completed)\r\n      default:\r\n        throw new Error('Unknown filter: ' + filter)\r\n    }\r\n  }\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: selectVisibleTodos(state)\r\n})\r\n\r\nconst mapDispatchToProps = { toggleTodo }\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)"]},"metadata":{},"sourceType":"module"}