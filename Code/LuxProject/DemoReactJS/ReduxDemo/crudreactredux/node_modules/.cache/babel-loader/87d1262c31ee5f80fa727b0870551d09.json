{"ast":null,"code":"var _jsxFileName = \"D:\\\\Luxtech\\\\Code\\\\LuxProject\\\\DemoReactJS\\\\ReduxDemo\\\\crudreactredux\\\\src\\\\components\\\\photoApp\\\\photoForm\\\\PhotoForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\n\nconst PhotoForm = () => {\n  // Pass the useFormik() hook initial form values and a submit function that will\n  // be called when the form is submitted\n  // const formik = useFormik({\n  //     initialValues: {\n  //         title: '',\n  //     },\n  //     onSubmit: values => {\n  //         alert(JSON.stringify(values, null, 2));\n  //     },\n  // });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Anywhere in your app!\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      title: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.title) {\n        errors.title = 'Required';\n      } else if (!/^[A-Z0-9]{3,}/i.test(values.title)) {\n        errors.title = 'it nhat 2';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        console.log(values);\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n    /* and other goodies */\n\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"title\",\n    name: \"title\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }), errors.title && touched.title && errors.title, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }), errors.password && touched.password && errors.password, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"Submit\"))));\n};\n\nexport default PhotoForm;","map":{"version":3,"sources":["D:/Luxtech/Code/LuxProject/DemoReactJS/ReduxDemo/crudreactredux/src/components/photoApp/photoForm/PhotoForm.js"],"names":["React","Formik","PhotoForm","title","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","console","log","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KADnB;AAEI,IAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;AACfG,QAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACH,OAFD,MAEO,IACH,CAAC,iBAAiBI,IAAjB,CAAsBF,MAAM,CAACF,KAA7B,CADE,EAEL;AACEG,QAAAA,MAAM,CAACH,KAAP,GAAe,WAAf;AACH;;AACD,aAAOG,MAAP;AACH,KAZL;AAaI,IAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,MAAAA;AAAF,KAAT,KAA+B;AACrCC,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAG,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAJS,EAIP,GAJO,CAAV;AAKH,KAnBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBK,CAAC;AACEH,IAAAA,MADF;AAEEC,IAAAA,MAFF;AAGES,IAAAA,OAHF;AAIEC,IAAAA,YAJF;AAKEC,IAAAA,UALF;AAMEC,IAAAA,YANF;AAOEC,IAAAA;AACA;;AARF,GAAD,kBAUO;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,QAAQ,EAAEF,YAHd;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,KAAK,EAAEZ,MAAM,CAACF,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQKG,MAAM,CAACH,KAAP,IAAgBY,OAAO,CAACZ,KAAxB,IAAiCG,MAAM,CAACH,KAR7C,eASI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,QAAQ,EAAEa,YAHd;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,KAAK,EAAEZ,MAAM,CAACD,QALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAgBKE,MAAM,CAACF,QAAP,IAAmBW,OAAO,CAACX,QAA3B,IAAuCE,MAAM,CAACF,QAhBnD,eAiBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEe,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,CA/BZ,CAFJ,CADJ;AA2DH,CAtED;;AAwEA,eAAejB,SAAf","sourcesContent":["import React from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nconst PhotoForm = () => {\r\n    // Pass the useFormik() hook initial form values and a submit function that will\r\n    // be called when the form is submitted\r\n    // const formik = useFormik({\r\n    //     initialValues: {\r\n    //         title: '',\r\n    //     },\r\n    //     onSubmit: values => {\r\n    //         alert(JSON.stringify(values, null, 2));\r\n    //     },\r\n    // });\r\n    return (\r\n        <div>\r\n            <h1>Anywhere in your app!</h1>\r\n            <Formik\r\n                initialValues={{ title: '', password: '' }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.title) {\r\n                        errors.title = 'Required';\r\n                    } else if (\r\n                        !/^[A-Z0-9]{3,}/i.test(values.title)\r\n                    ) {\r\n                        errors.title = 'it nhat 2';\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                        console.log(values);\r\n                        setSubmitting(false);\r\n                    }, 400);\r\n                }}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    /* and other goodies */\r\n                }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <input\r\n                                type=\"title\"\r\n                                name=\"title\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.title}\r\n                            />\r\n                            {errors.title && touched.title && errors.title}\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                            />\r\n                            {errors.password && touched.password && errors.password}\r\n                            <button type=\"submit\" disabled={isSubmitting}>\r\n                                Submit\r\n           </button>\r\n                        </form>\r\n                    )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhotoForm"]},"metadata":{},"sourceType":"module"}