{"ast":null,"code":"var _jsxFileName = \"D:\\\\Luxtech\\\\Code\\\\LuxProject\\\\DemoReactJS\\\\ReduxDemo\\\\crudreactredux\\\\src\\\\components\\\\photoApp\\\\photoForm\\\\PhotoForm.js\";\nimport React from 'react';\nimport { FastField, Form, Formik } from \"formik\";\n\nconst PhotoForm = () => {\n  return /*#__PURE__*/React.createElement(Formik, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, formikProps => {\n    const {\n      values,\n      errors,\n      touched\n    } = formikProps;\n    return (\n      /*#__PURE__*/\n      // <Form>\n      //     <FastField ></FastField>\n      // </Form>\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }\n      }, \"Anywhere in your app!\"), /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }\n      }, ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      }) => /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }\n      }), errors.email && touched.email && errors.email, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }), errors.password && touched.password && errors.password, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }\n      }, \"Submit\"))))\n    );\n  });\n};\n\nexport default PhotoForm;","map":{"version":3,"sources":["D:/Luxtech/Code/LuxProject/DemoReactJS/ReduxDemo/crudreactredux/src/components/photoApp/photoForm/PhotoForm.js"],"names":["React","FastField","Form","Formik","PhotoForm","formikProps","values","errors","touched","email","password","test","setSubmitting","setTimeout","alert","JSON","stringify","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,QAAxC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,WAAW,IAAI;AACZ,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,MAAV;AAAkBC,MAAAA;AAAlB,QAA8BH,WAApC;AACA;AAAA;AACI;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI,oBAAC,MAAD;AACI,QAAA,aAAa,EAAE;AAAEI,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SADnB;AAEI,QAAA,QAAQ,EAAEJ,MAAM,IAAI;AAChB,gBAAMC,MAAM,GAAG,EAAf;;AACA,cAAI,CAACD,MAAM,CAACG,KAAZ,EAAmB;AACfF,YAAAA,MAAM,CAACE,KAAP,GAAe,UAAf;AACH,WAFD,MAEO,IACH,CAAC,2CAA2CE,IAA3C,CAAgDL,MAAM,CAACG,KAAvD,CADE,EAEL;AACEF,YAAAA,MAAM,CAACE,KAAP,GAAe,uBAAf;AACH;;AACD,iBAAOF,MAAP;AACH,SAZL;AAaI,QAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEM,UAAAA;AAAF,SAAT,KAA+B;AACrCC,UAAAA,UAAU,CAAC,MAAM;AACbC,YAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeV,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAM,YAAAA,aAAa,CAAC,KAAD,CAAb;AACH,WAHS,EAGP,GAHO,CAAV;AAIH,SAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBK,CAAC;AACEN,QAAAA,MADF;AAEEC,QAAAA,MAFF;AAGEC,QAAAA,OAHF;AAIES,QAAAA,YAJF;AAKEC,QAAAA,UALF;AAMEC,QAAAA,YANF;AAOEC,QAAAA;AACA;;AARF,OAAD,kBAUO;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,QAAQ,EAAEF,YAHd;AAII,QAAA,MAAM,EAAEC,UAJZ;AAKI,QAAA,KAAK,EAAEZ,MAAM,CAACG,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQKF,MAAM,CAACE,KAAP,IAAgBD,OAAO,CAACC,KAAxB,IAAiCF,MAAM,CAACE,KAR7C,eASI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,QAAQ,EAAEQ,YAHd;AAII,QAAA,MAAM,EAAEC,UAJZ;AAKI,QAAA,KAAK,EAAEZ,MAAM,CAACI,QALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAgBKH,MAAM,CAACG,QAAP,IAAmBF,OAAO,CAACE,QAA3B,IAAuCH,MAAM,CAACG,QAhBnD,eAiBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAEU,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,CA9BZ,CAFJ;AAJJ;AA6DH,GAhEL,CADJ;AAoEH,CArED;;AAuEA,eAAehB,SAAf","sourcesContent":["import React from 'react'\r\nimport { FastField, Form, Formik } from \"formik\";\r\n\r\nconst PhotoForm = () => {\r\n    return (\r\n        <Formik>\r\n            {formikProps => {\r\n                const { values, errors, touched } = formikProps;\r\n                return (\r\n                    // <Form>\r\n                    //     <FastField ></FastField>\r\n                    // </Form>\r\n                    <div>\r\n                        <h1>Anywhere in your app!</h1>\r\n                        <Formik\r\n                            initialValues={{ email: '', password: '' }}\r\n                            validate={values => {\r\n                                const errors = {};\r\n                                if (!values.email) {\r\n                                    errors.email = 'Required';\r\n                                } else if (\r\n                                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                                ) {\r\n                                    errors.email = 'Invalid email address';\r\n                                }\r\n                                return errors;\r\n                            }}\r\n                            onSubmit={(values, { setSubmitting }) => {\r\n                                setTimeout(() => {\r\n                                    alert(JSON.stringify(values, null, 2));\r\n                                    setSubmitting(false);\r\n                                }, 400);\r\n                            }}\r\n                        >\r\n                            {({\r\n                                values,\r\n                                errors,\r\n                                touched,\r\n                                handleChange,\r\n                                handleBlur,\r\n                                handleSubmit,\r\n                                isSubmitting,\r\n                                /* and other goodies */\r\n                            }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}\r\n                                        />\r\n                                        {errors.email && touched.email && errors.email}\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}\r\n                                        />\r\n                                        {errors.password && touched.password && errors.password}\r\n                                        <button type=\"submit\" disabled={isSubmitting}>\r\n                                            Submit\r\n           </button>\r\n                                    </form>\r\n                                )}\r\n                        </Formik>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default PhotoForm;"]},"metadata":{},"sourceType":"module"}