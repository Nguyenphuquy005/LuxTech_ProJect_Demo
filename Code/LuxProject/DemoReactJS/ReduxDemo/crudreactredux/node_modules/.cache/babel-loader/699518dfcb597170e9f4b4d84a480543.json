{"ast":null,"code":"var _jsxFileName = \"D:\\\\Luxtech\\\\Code\\\\LuxProject\\\\DemoReactJS\\\\ReduxDemo\\\\crudreactredux\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PropTypes from 'prop-types';\nimport { getEmployee, addEmployee, editEmployee, deleteEmployee } from './Redux/action';\nimport { connect } from 'react-redux';\nimport Employee from \"./components/Employee/Employee\";\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     id: 0,\n  //     employeeName: \"\",\n  //     employeeDepartment: \"\"\n  //   };\n  // }\n  // static propTypes = {\n  //   employees: PropTypes.array.isRequired,\n  //   getEmployee: PropTypes.func.isRequired,\n  //   addEmployee: PropTypes.func.isRequired,\n  //   editEmployee: PropTypes.func.isRequired,\n  //   deleteEmployee: PropTypes.func.isRequired\n  // };\n  // componentDidMount() {\n  //   this.props.getEmployee();\n  // }\n  // submitData = () => {\n  //   if (this.state.employeeName && this.state.employeeDepartment && !this.state.id) {\n  //     const newEmployee = {\n  //       id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\n  //       employeeName: this.state.employeeName,\n  //       employeeDepartment: this.state.employeeDepartment,\n  //     };\n  //     this.props.addEmployee(newEmployee);\n  //   } else if (this.state.employeeName && this.state.employeeDepartment && this.state.id) {\n  //     const updatedDetails = {\n  //       id: this.state.id,\n  //       employeeName: this.state.employeeName,\n  //       employeeDepartment: this.state.employeeDepartment,\n  //     };\n  //     this.props.editEmployee(updatedDetails);\n  //   } else {\n  //     alert('Enter Employee Details.');\n  //   }\n  //   this.clearData();\n  // }\n  // editDetails = (data) => {\n  //   this.setState({\n  //     id: data.id,\n  //     employeeName: data.employeeName,\n  //     employeeDepartment: data.employeeDepartment\n  //   })\n  // }\n  // deleteEmployee = (id) => {\n  //   this.clearData();\n  //   if (window.confirm(\"Are you sure?\")) {\n  //     this.props.deleteEmployee(id);\n  //   }\n  // }\n  // handleNameChange = (e) => {\n  //   this.setState({\n  //     employeeName: e.target.value\n  //   });\n  // }\n  // handleDepartmentChange = (e) => {\n  //   this.setState({\n  //     employeeDepartment: e.target.value\n  //   });\n  // }\n  // clearData = () => {\n  //   this.setState({\n  //     id: 0,\n  //     employeeName: \"\",\n  //     employeeDepartment: \"\"\n  //   });\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(Employee, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }) // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <h1 className=\"App-title\">CRUD opeartions for Employee Module</h1>\n    //   </header>\n    //   <p className=\"App-intro\">\n    //     <div className=\"leftsection\">\n    //       Employee Name : <input onChange={this.handleNameChange} value={this.state.employeeName} type=\"text\" placeholder=\"Employee Name\" /> <br />\n    //       Employee Department :  <input onChange={this.handleDepartmentChange} value={this.state.employeeDepartment} type=\"text\" placeholder=\"Employee Department\" /><br />\n    //       {this.state.id ? <button onClick={this.submitData}>UPDATE</button> : <button onClick={this.submitData}>ADD</button>} &nbsp;&nbsp;<button onClick={this.clearData}>CLEAR</button>\n    //     </div>\n    //     <div className=\"rightsection\">\n    //       <table>\n    //         <thead>\n    //           <tr>\n    //             <th>ID</th>\n    //             <th>Name</th>\n    //             <th>Depatment Name</th>\n    //             <th>Action(s)</th>\n    //           </tr>\n    //         </thead>\n    //         <tbody>\n    //           {this.props.employees && this.props.employees.map((data, index) => {\n    //             return <tr key={(index + 1)}>\n    //               <td>{(index + 1)}</td>\n    //               <td>{data.employeeName}</td>\n    //               <td>{data.employeeDepartment}</td>\n    //               <td><button onClick={() => this.editDetails(data)}>EDIT</button> <button onClick={() => this.deleteEmployee(data.id)}>DELETE</button> </td>\n    //             </tr>\n    //           })}\n    //         </tbody>\n    //       </table>\n    //     </div>\n    //   </p>\n    // </div>\n    ;\n  }\n\n} // const mapStateToProps = state => ({\n//   employees: state.employees\n// });\n// export default connect(mapStateToProps, { getEmployee, addEmployee, editEmployee, deleteEmployee })(App);\n\n\nexport default App;","map":{"version":3,"sources":["D:/Luxtech/Code/LuxProject/DemoReactJS/ReduxDemo/crudreactredux/src/App.js"],"names":["React","Component","PropTypes","getEmployee","addEmployee","editEmployee","deleteEmployee","connect","Employee","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,EAAiDC,cAAjD,QAAuE,gBAAvE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAS,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCF;AAsCD;;AAxHyB,C,CA2H5B;AACA;AACA;AAEA;;;AACA,eAAeD,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PropTypes from 'prop-types';\nimport { getEmployee, addEmployee, editEmployee, deleteEmployee } from './Redux/action';\nimport { connect } from 'react-redux';\nimport Employee from \"./components/Employee/Employee\";\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     id: 0,\n  //     employeeName: \"\",\n  //     employeeDepartment: \"\"\n  //   };\n  // }\n\n  // static propTypes = {\n  //   employees: PropTypes.array.isRequired,\n  //   getEmployee: PropTypes.func.isRequired,\n  //   addEmployee: PropTypes.func.isRequired,\n  //   editEmployee: PropTypes.func.isRequired,\n  //   deleteEmployee: PropTypes.func.isRequired\n  // };\n\n  // componentDidMount() {\n  //   this.props.getEmployee();\n  // }\n\n  // submitData = () => {\n  //   if (this.state.employeeName && this.state.employeeDepartment && !this.state.id) {\n  //     const newEmployee = {\n  //       id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\n  //       employeeName: this.state.employeeName,\n  //       employeeDepartment: this.state.employeeDepartment,\n  //     };\n\n  //     this.props.addEmployee(newEmployee);\n  //   } else if (this.state.employeeName && this.state.employeeDepartment && this.state.id) {\n  //     const updatedDetails = {\n  //       id: this.state.id,\n  //       employeeName: this.state.employeeName,\n  //       employeeDepartment: this.state.employeeDepartment,\n  //     };\n\n  //     this.props.editEmployee(updatedDetails);\n  //   } else {\n  //     alert('Enter Employee Details.');\n  //   }\n\n  //   this.clearData();\n  // }\n\n  // editDetails = (data) => {\n  //   this.setState({\n  //     id: data.id,\n  //     employeeName: data.employeeName,\n  //     employeeDepartment: data.employeeDepartment\n  //   })\n  // }\n\n  // deleteEmployee = (id) => {\n  //   this.clearData();\n  //   if (window.confirm(\"Are you sure?\")) {\n  //     this.props.deleteEmployee(id);\n  //   }\n  // }\n\n  // handleNameChange = (e) => {\n  //   this.setState({\n  //     employeeName: e.target.value\n  //   });\n  // }\n\n  // handleDepartmentChange = (e) => {\n  //   this.setState({\n  //     employeeDepartment: e.target.value\n  //   });\n  // }\n\n  // clearData = () => {\n  //   this.setState({\n  //     id: 0,\n  //     employeeName: \"\",\n  //     employeeDepartment: \"\"\n  //   });\n  // }\n\n  render() {\n    return (\n      <Employee />\n      // <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <h1 className=\"App-title\">CRUD opeartions for Employee Module</h1>\n      //   </header>\n      //   <p className=\"App-intro\">\n      //     <div className=\"leftsection\">\n      //       Employee Name : <input onChange={this.handleNameChange} value={this.state.employeeName} type=\"text\" placeholder=\"Employee Name\" /> <br />\n      //       Employee Department :  <input onChange={this.handleDepartmentChange} value={this.state.employeeDepartment} type=\"text\" placeholder=\"Employee Department\" /><br />\n      //       {this.state.id ? <button onClick={this.submitData}>UPDATE</button> : <button onClick={this.submitData}>ADD</button>} &nbsp;&nbsp;<button onClick={this.clearData}>CLEAR</button>\n      //     </div>\n      //     <div className=\"rightsection\">\n      //       <table>\n      //         <thead>\n      //           <tr>\n      //             <th>ID</th>\n      //             <th>Name</th>\n      //             <th>Depatment Name</th>\n      //             <th>Action(s)</th>\n      //           </tr>\n      //         </thead>\n      //         <tbody>\n      //           {this.props.employees && this.props.employees.map((data, index) => {\n      //             return <tr key={(index + 1)}>\n      //               <td>{(index + 1)}</td>\n      //               <td>{data.employeeName}</td>\n      //               <td>{data.employeeDepartment}</td>\n      //               <td><button onClick={() => this.editDetails(data)}>EDIT</button> <button onClick={() => this.deleteEmployee(data.id)}>DELETE</button> </td>\n      //             </tr>\n      //           })}\n      //         </tbody>\n      //       </table>\n      //     </div>\n      //   </p>\n      // </div>\n    );\n  }\n}\n\n// const mapStateToProps = state => ({\n//   employees: state.employees\n// });\n\n// export default connect(mapStateToProps, { getEmployee, addEmployee, editEmployee, deleteEmployee })(App);\nexport default App"]},"metadata":{},"sourceType":"module"}