{"ast":null,"code":"var _jsxFileName = \"D:\\\\Luxtech\\\\Code\\\\LuxProject\\\\DemoReactJS\\\\ReduxDemo\\\\crudreactredux\\\\src\\\\components\\\\photoApp\\\\photoForm\\\\PhotoForm.js\";\nimport React from 'react';\nimport { FastField, Form, Formik } from \"formik\";\nimport InputFiled from 'components/photoApp/inputField/InputFiled';\nimport { Button, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nconst PhotoForm = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: Yup.object().shape({\n      firstName: Yup.string().required(),\n      middleInitial: Yup.string(),\n      lastName: Yup.string().required(),\n      email: Yup.string().email().required()\n    }),\n    onSubmit: values => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n      }, 500);\n    },\n    render: formikProps => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(FastField, {\n      name: \"firstName\",\n      placeholder: \"Weezy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }), form.touched.firstName && form.errors.firstName && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, form.errors.firstName), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"middleInitial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Middle Initial\"), /*#__PURE__*/React.createElement(FastField, {\n      name: \"middleInitial\",\n      placeholder: \"F\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, ({\n      field,\n      form,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    })), meta.touched ? meta.error : null, form.touched.firstName && form.errors.firstName ? form.errors.firstName : null, form.submitCount, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: form.setFieldValue('middleInitial', 'J'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }, \"J\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"LastName\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"lastName\",\n      placeholder: \"Baby\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    })), form.touched.firstName && form.errors.firstName ? form.errors.firstName : null)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      placeholder: \"jane@acme.com\",\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Submit\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PhotoForm;","map":{"version":3,"sources":["D:/Luxtech/Code/LuxProject/DemoReactJS/ReduxDemo/crudreactredux/src/components/photoApp/photoForm/PhotoForm.js"],"names":["React","FastField","Form","Formik","InputFiled","Button","FormGroup","Label","Input","FormText","PhotoForm","firstName","lastName","email","Yup","object","shape","string","required","middleInitial","values","setTimeout","alert","JSON","stringify","formikProps","form","touched","errors","field","meta","error","submitCount","setFieldValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,QAAxC;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,KAAnC,EAA0CC,QAA1C,QAA0D,YAA1D;;AACA,MAAMC,SAAS,GAAG,MAAM;AAEpB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KADnB;AAMI,IAAA,gBAAgB,EAAEC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AACjCL,MAAAA,SAAS,EAAEG,GAAG,CAACG,MAAJ,GAAaC,QAAb,EADsB;AAEjCC,MAAAA,aAAa,EAAEL,GAAG,CAACG,MAAJ,EAFkB;AAGjCL,MAAAA,QAAQ,EAAEE,GAAG,CAACG,MAAJ,GAAaC,QAAb,EAHuB;AAIjCL,MAAAA,KAAK,EAAEC,GAAG,CAACG,MAAJ,GAAaJ,KAAb,GAAqBK,QAArB;AAJ0B,KAAnB,CANtB;AAYI,IAAA,QAAQ,EAAEE,MAAM,IAAI;AAChBC,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KAhBL;AAiBI,IAAA,MAAM,EAAEK,WAAW,iBACf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,WAAhB;AAA4B,MAAA,WAAW,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAQKC,IAAI,CAACC,OAAL,CAAahB,SAAb,IAA0Be,IAAI,CAACE,MAAL,CAAYjB,SAAtC,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMe,IAAI,CAACE,MAAL,CAAYjB,SAAlB,CATR,eAYI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZJ,eAaI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,eAAhB;AAAgC,MAAA,WAAW,EAAC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEkB,MAAAA,KAAF;AAASH,MAAAA,IAAT;AAAeI,MAAAA;AAAf,KAAD,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAMKC,IAAI,CAACH,OAAL,GAAeG,IAAI,CAACC,KAApB,GAA4B,IANjC,EAUKL,IAAI,CAACC,OAAL,CAAahB,SAAb,IAA0Be,IAAI,CAACE,MAAL,CAAYjB,SAAtC,GACKe,IAAI,CAACE,MAAL,CAAYjB,SADjB,GAEK,IAZV,EAeKe,IAAI,CAACM,WAfV,eAkBI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAEN,IAAI,CAACO,aAAL,CAAmB,eAAnB,EAAoC,GAApC,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAlBJ,CAFR,CAbJ,eA6CI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CJ,eA8CI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,mBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,+CAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAIKH,IAAI,CAACC,OAAL,CAAahB,SAAb,IAA0Be,IAAI,CAACE,MAAL,CAAYjB,SAAtC,GACKe,IAAI,CAACE,MAAL,CAAYjB,SADjB,GAEK,IANV,CAFR,CA9CJ,eA6DI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7DJ,eA8DI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,WAAW,EAAC,eAAhC;AAAgD,MAAA,IAAI,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9DJ,eAgEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhEJ,CAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AA4FH,CA9FD;;AAgGA,eAAeD,SAAf","sourcesContent":["import React from 'react'\r\nimport { FastField, Form, Formik } from \"formik\";\r\nimport InputFiled from 'components/photoApp/inputField/InputFiled'\r\nimport { Button, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nconst PhotoForm = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign Up</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    firstName: Yup.string().required(),\r\n                    middleInitial: Yup.string(),\r\n                    lastName: Yup.string().required(),\r\n                    email: Yup.string().email().required(),\r\n                })}\r\n                onSubmit={values => {\r\n                    setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                    }, 500);\r\n                }}\r\n                render={formikProps => (\r\n                    <Form>\r\n                        {/** This <FastField> only updates for changes made to\r\n               values.firstName, touched.firstName, errors.firstName */}\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <FastField name=\"firstName\" placeholder=\"Weezy\" />\r\n\r\n                        {/** Updates for all changes because it's from the\r\n               top-level formikProps which get all updates */}\r\n                        {form.touched.firstName && form.errors.firstName && (\r\n                            <div>{form.errors.firstName}</div>\r\n                        )}\r\n\r\n                        <label htmlFor=\"middleInitial\">Middle Initial</label>\r\n                        <FastField name=\"middleInitial\" placeholder=\"F\">\r\n                            {({ field, form, meta }) => (\r\n                                <div>\r\n                                    <input {...field} />\r\n                                    {/**\r\n                     * This updates normally because it's from the same slice of Formik state,\r\n                     * i.e. path to the object matches the name of this <FastField />\r\n                     */}\r\n                                    {meta.touched ? meta.error : null}\r\n\r\n                                    {/** This won't ever update since it's coming from\r\n                     from another <Field>/<FastField>'s (i.e. firstName's) slice   */}\r\n                                    {form.touched.firstName && form.errors.firstName\r\n                                        ? form.errors.firstName\r\n                                        : null}\r\n\r\n                                    {/* This doesn't update either */}\r\n                                    {form.submitCount}\r\n\r\n                                    {/* Imperative methods still work as expected */}\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={form.setFieldValue('middleInitial', 'J')}\r\n                                    >\r\n                                        J\r\n                    </button>\r\n                                </div>\r\n                            )}\r\n                        </FastField>\r\n\r\n                        {/** Updates for all changes to Formik state\r\n               and all changes by all <Field>s and <FastField>s */}\r\n                        <label htmlFor=\"lastName\">LastName</label>\r\n                        <Field name=\"lastName\" placeholder=\"Baby\">\r\n                            {() => (\r\n                                <div>\r\n                                    <input {...field} />\r\n                                    {/**  Works because this is inside\r\n                     of a <Field/>, which gets all updates */}\r\n                                    {form.touched.firstName && form.errors.firstName\r\n                                        ? form.errors.firstName\r\n                                        : null}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n\r\n                        {/** Updates for all changes to Formik state and\r\n               all changes by all <Field>s and <FastField>s */}\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <Field name=\"email\" placeholder=\"jane@acme.com\" type=\"email\" />\r\n\r\n                        <button type=\"submit\">Submit</button>\r\n                    </Form>\r\n                )}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PhotoForm;"]},"metadata":{},"sourceType":"module"}